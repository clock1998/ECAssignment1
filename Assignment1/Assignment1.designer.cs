#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Assignment1")]
	public partial class Assignment1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaddress_information(address_information instance);
    partial void Updateaddress_information(address_information instance);
    partial void Deleteaddress_information(address_information instance);
    partial void Insertcontact_information(contact_information instance);
    partial void Updatecontact_information(contact_information instance);
    partial void Deletecontact_information(contact_information instance);
    partial void Insertcountry(country instance);
    partial void Updatecountry(country instance);
    partial void Deletecountry(country instance);
    partial void Insertprofile_information(profile_information instance);
    partial void Updateprofile_information(profile_information instance);
    partial void Deleteprofile_information(profile_information instance);
    partial void Insertprofile_picture(profile_picture instance);
    partial void Updateprofile_picture(profile_picture instance);
    partial void Deleteprofile_picture(profile_picture instance);
    #endregion
		
		public Assignment1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Assignment1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Assignment1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Assignment1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Assignment1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Assignment1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<address_information> address_informations
		{
			get
			{
				return this.GetTable<address_information>();
			}
		}
		
		public System.Data.Linq.Table<contact_information> contact_informations
		{
			get
			{
				return this.GetTable<contact_information>();
			}
		}
		
		public System.Data.Linq.Table<country> countries
		{
			get
			{
				return this.GetTable<country>();
			}
		}
		
		public System.Data.Linq.Table<profile_information> profile_informations
		{
			get
			{
				return this.GetTable<profile_information>();
			}
		}
		
		public System.Data.Linq.Table<profile_picture> profile_pictures
		{
			get
			{
				return this.GetTable<profile_picture>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.address_information")]
	public partial class address_information : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _personid;
		
		private string _description;
		
		private string _street_address;
		
		private string _city;
		
		private string _province;
		
		private string _state;
		
		private string _zip_code;
		
		private int _countryid;
		
		private EntityRef<country> _country;
		
		private EntityRef<profile_information> _profile_information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnpersonidChanging(int value);
    partial void OnpersonidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onstreet_addressChanging(string value);
    partial void Onstreet_addressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void Onzip_codeChanging(string value);
    partial void Onzip_codeChanged();
    partial void OncountryidChanging(int value);
    partial void OncountryidChanged();
    #endregion
		
		public address_information()
		{
			this._country = default(EntityRef<country>);
			this._profile_information = default(EntityRef<profile_information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personid", DbType="Int NOT NULL")]
		public int personid
		{
			get
			{
				return this._personid;
			}
			set
			{
				if ((this._personid != value))
				{
					if (this._profile_information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpersonidChanging(value);
					this.SendPropertyChanging();
					this._personid = value;
					this.SendPropertyChanged("personid");
					this.OnpersonidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street_address", DbType="NVarChar(MAX)")]
		public string street_address
		{
			get
			{
				return this._street_address;
			}
			set
			{
				if ((this._street_address != value))
				{
					this.Onstreet_addressChanging(value);
					this.SendPropertyChanging();
					this._street_address = value;
					this.SendPropertyChanged("street_address");
					this.Onstreet_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="NVarChar(50)")]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(50)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip_code", DbType="NChar(10)")]
		public string zip_code
		{
			get
			{
				return this._zip_code;
			}
			set
			{
				if ((this._zip_code != value))
				{
					this.Onzip_codeChanging(value);
					this.SendPropertyChanging();
					this._zip_code = value;
					this.SendPropertyChanged("zip_code");
					this.Onzip_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryid", DbType="Int NOT NULL")]
		public int countryid
		{
			get
			{
				return this._countryid;
			}
			set
			{
				if ((this._countryid != value))
				{
					if (this._country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryidChanging(value);
					this.SendPropertyChanging();
					this._countryid = value;
					this.SendPropertyChanged("countryid");
					this.OncountryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="country_address_information", Storage="_country", ThisKey="countryid", OtherKey="Id", IsForeignKey=true)]
		public country country
		{
			get
			{
				return this._country.Entity;
			}
			set
			{
				country previousValue = this._country.Entity;
				if (((previousValue != value) 
							|| (this._country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._country.Entity = null;
						previousValue.address_informations.Remove(this);
					}
					this._country.Entity = value;
					if ((value != null))
					{
						value.address_informations.Add(this);
						this._countryid = value.Id;
					}
					else
					{
						this._countryid = default(int);
					}
					this.SendPropertyChanged("country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profile_information_address_information", Storage="_profile_information", ThisKey="personid", OtherKey="Id", IsForeignKey=true)]
		public profile_information profile_information
		{
			get
			{
				return this._profile_information.Entity;
			}
			set
			{
				profile_information previousValue = this._profile_information.Entity;
				if (((previousValue != value) 
							|| (this._profile_information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._profile_information.Entity = null;
						previousValue.address_informations.Remove(this);
					}
					this._profile_information.Entity = value;
					if ((value != null))
					{
						value.address_informations.Add(this);
						this._personid = value.Id;
					}
					else
					{
						this._personid = default(int);
					}
					this.SendPropertyChanged("profile_information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contact_information")]
	public partial class contact_information : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _personid;
		
		private string _contact_type;
		
		private string _contact_data;
		
		private EntityRef<profile_information> _profile_information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnpersonidChanging(int value);
    partial void OnpersonidChanged();
    partial void Oncontact_typeChanging(string value);
    partial void Oncontact_typeChanged();
    partial void Oncontact_dataChanging(string value);
    partial void Oncontact_dataChanged();
    #endregion
		
		public contact_information()
		{
			this._profile_information = default(EntityRef<profile_information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personid", DbType="Int NOT NULL")]
		public int personid
		{
			get
			{
				return this._personid;
			}
			set
			{
				if ((this._personid != value))
				{
					if (this._profile_information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpersonidChanging(value);
					this.SendPropertyChanging();
					this._personid = value;
					this.SendPropertyChanged("personid");
					this.OnpersonidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_type", DbType="NVarChar(MAX)")]
		public string contact_type
		{
			get
			{
				return this._contact_type;
			}
			set
			{
				if ((this._contact_type != value))
				{
					this.Oncontact_typeChanging(value);
					this.SendPropertyChanging();
					this._contact_type = value;
					this.SendPropertyChanged("contact_type");
					this.Oncontact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_data", DbType="NVarChar(MAX)")]
		public string contact_data
		{
			get
			{
				return this._contact_data;
			}
			set
			{
				if ((this._contact_data != value))
				{
					this.Oncontact_dataChanging(value);
					this.SendPropertyChanging();
					this._contact_data = value;
					this.SendPropertyChanged("contact_data");
					this.Oncontact_dataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profile_information_contact_information", Storage="_profile_information", ThisKey="personid", OtherKey="Id", IsForeignKey=true)]
		public profile_information profile_information
		{
			get
			{
				return this._profile_information.Entity;
			}
			set
			{
				profile_information previousValue = this._profile_information.Entity;
				if (((previousValue != value) 
							|| (this._profile_information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._profile_information.Entity = null;
						previousValue.contact_informations.Remove(this);
					}
					this._profile_information.Entity = value;
					if ((value != null))
					{
						value.contact_informations.Add(this);
						this._personid = value.Id;
					}
					else
					{
						this._personid = default(int);
					}
					this.SendPropertyChanged("profile_information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.countries")]
	public partial class country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _country_code;
		
		private string _country_name;
		
		private EntitySet<address_information> _address_informations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Oncountry_codeChanging(string value);
    partial void Oncountry_codeChanged();
    partial void Oncountry_nameChanging(string value);
    partial void Oncountry_nameChanged();
    #endregion
		
		public country()
		{
			this._address_informations = new EntitySet<address_information>(new Action<address_information>(this.attach_address_informations), new Action<address_information>(this.detach_address_informations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_code", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string country_code
		{
			get
			{
				return this._country_code;
			}
			set
			{
				if ((this._country_code != value))
				{
					this.Oncountry_codeChanging(value);
					this.SendPropertyChanging();
					this._country_code = value;
					this.SendPropertyChanged("country_code");
					this.Oncountry_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string country_name
		{
			get
			{
				return this._country_name;
			}
			set
			{
				if ((this._country_name != value))
				{
					this.Oncountry_nameChanging(value);
					this.SendPropertyChanging();
					this._country_name = value;
					this.SendPropertyChanged("country_name");
					this.Oncountry_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="country_address_information", Storage="_address_informations", ThisKey="Id", OtherKey="countryid")]
		public EntitySet<address_information> address_informations
		{
			get
			{
				return this._address_informations;
			}
			set
			{
				this._address_informations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_address_informations(address_information entity)
		{
			this.SendPropertyChanging();
			entity.country = this;
		}
		
		private void detach_address_informations(address_information entity)
		{
			this.SendPropertyChanging();
			entity.country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.profile_information")]
	public partial class profile_information : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _first_name;
		
		private string _middle_name;
		
		private string _last_name;
		
		private EntitySet<address_information> _address_informations;
		
		private EntitySet<contact_information> _contact_informations;
		
		private EntitySet<profile_picture> _profile_pictures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onmiddle_nameChanging(string value);
    partial void Onmiddle_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    #endregion
		
		public profile_information()
		{
			this._address_informations = new EntitySet<address_information>(new Action<address_information>(this.attach_address_informations), new Action<address_information>(this.detach_address_informations));
			this._contact_informations = new EntitySet<contact_information>(new Action<contact_information>(this.attach_contact_informations), new Action<contact_information>(this.detach_contact_informations));
			this._profile_pictures = new EntitySet<profile_picture>(new Action<profile_picture>(this.attach_profile_pictures), new Action<profile_picture>(this.detach_profile_pictures));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(MAX)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middle_name", DbType="NVarChar(MAX)")]
		public string middle_name
		{
			get
			{
				return this._middle_name;
			}
			set
			{
				if ((this._middle_name != value))
				{
					this.Onmiddle_nameChanging(value);
					this.SendPropertyChanging();
					this._middle_name = value;
					this.SendPropertyChanged("middle_name");
					this.Onmiddle_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(MAX)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profile_information_address_information", Storage="_address_informations", ThisKey="Id", OtherKey="personid")]
		public EntitySet<address_information> address_informations
		{
			get
			{
				return this._address_informations;
			}
			set
			{
				this._address_informations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profile_information_contact_information", Storage="_contact_informations", ThisKey="Id", OtherKey="personid")]
		public EntitySet<contact_information> contact_informations
		{
			get
			{
				return this._contact_informations;
			}
			set
			{
				this._contact_informations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profile_information_profile_picture", Storage="_profile_pictures", ThisKey="Id", OtherKey="personid")]
		public EntitySet<profile_picture> profile_pictures
		{
			get
			{
				return this._profile_pictures;
			}
			set
			{
				this._profile_pictures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_address_informations(address_information entity)
		{
			this.SendPropertyChanging();
			entity.profile_information = this;
		}
		
		private void detach_address_informations(address_information entity)
		{
			this.SendPropertyChanging();
			entity.profile_information = null;
		}
		
		private void attach_contact_informations(contact_information entity)
		{
			this.SendPropertyChanging();
			entity.profile_information = this;
		}
		
		private void detach_contact_informations(contact_information entity)
		{
			this.SendPropertyChanging();
			entity.profile_information = null;
		}
		
		private void attach_profile_pictures(profile_picture entity)
		{
			this.SendPropertyChanging();
			entity.profile_information = this;
		}
		
		private void detach_profile_pictures(profile_picture entity)
		{
			this.SendPropertyChanging();
			entity.profile_information = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.profile_pictures")]
	public partial class profile_picture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _personid;
		
		private string _description;
		
		private string _relative_path;
		
		private EntityRef<profile_information> _profile_information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnpersonidChanging(int value);
    partial void OnpersonidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onrelative_pathChanging(string value);
    partial void Onrelative_pathChanged();
    #endregion
		
		public profile_picture()
		{
			this._profile_information = default(EntityRef<profile_information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personid", DbType="Int NOT NULL")]
		public int personid
		{
			get
			{
				return this._personid;
			}
			set
			{
				if ((this._personid != value))
				{
					if (this._profile_information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpersonidChanging(value);
					this.SendPropertyChanging();
					this._personid = value;
					this.SendPropertyChanged("personid");
					this.OnpersonidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relative_path", DbType="NVarChar(MAX)")]
		public string relative_path
		{
			get
			{
				return this._relative_path;
			}
			set
			{
				if ((this._relative_path != value))
				{
					this.Onrelative_pathChanging(value);
					this.SendPropertyChanging();
					this._relative_path = value;
					this.SendPropertyChanged("relative_path");
					this.Onrelative_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profile_information_profile_picture", Storage="_profile_information", ThisKey="personid", OtherKey="Id", IsForeignKey=true)]
		public profile_information profile_information
		{
			get
			{
				return this._profile_information.Entity;
			}
			set
			{
				profile_information previousValue = this._profile_information.Entity;
				if (((previousValue != value) 
							|| (this._profile_information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._profile_information.Entity = null;
						previousValue.profile_pictures.Remove(this);
					}
					this._profile_information.Entity = value;
					if ((value != null))
					{
						value.profile_pictures.Add(this);
						this._personid = value.Id;
					}
					else
					{
						this._personid = default(int);
					}
					this.SendPropertyChanged("profile_information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
